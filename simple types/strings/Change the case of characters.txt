\\ Simple types.— Strings — Change the case of characters


In Go, you can change the case of characters in a string using functions from the `strings` package. The `strings.ToUpper` function converts a string to uppercase, and the `strings.ToLower` function converts a string to lowercase.

### Example: Converting Strings to Uppercase and Lowercase

Here’s an example demonstrating how to convert a string to uppercase and lowercase.

#### Example Code

```go
package main

import (
    "fmt"
    "strings"
)

func main() {
    // Define a string
    str := "Hello, World!"

    // Convert the string to uppercase
    upperStr := strings.ToUpper(str)
    fmt.Printf("Uppercase: %s\n", upperStr)

    // Convert the string to lowercase
    lowerStr := strings.ToLower(str)
    fmt.Printf("Lowercase: %s\n", lowerStr)
}
```

### Explanation

1. **Import the `strings` Package**:
   - The `strings` package provides functions for manipulating strings, including case conversion.

2. **Define a String**:
   - We define a string `str` with the value "Hello, World!".

3. **Convert the String to Uppercase**:
   - We use `strings.ToUpper(str)` to convert the string to uppercase.
   - We store the result in `upperStr` and print it.

4. **Convert the String to Lowercase**:
   - We use `strings.ToLower(str)` to convert the string to lowercase.
   - We store the result in `lowerStr` and print it.

### Detailed Output

The output of the above code will be:
```
Uppercase: HELLO, WORLD!
Lowercase: hello, world!
```

### Converting Specific Characters to Uppercase or Lowercase

If you need to change the case of specific characters within a string, you can iterate over the string and use the `unicode.ToUpper` and `unicode.ToLower` functions from the `unicode` package.

#### Example: Converting Specific Characters to Uppercase or Lowercase

```go
package main

import (
    "fmt"
    "unicode"
)

func toUpperCaseAtIndex(s string, index int) string {
    runes := []rune(s)
    if index >= 0 && index < len(runes) {
        runes[index] = unicode.ToUpper(runes[index])
    }
    return string(runes)
}

func toLowerCaseAtIndex(s string, index int) string {
    runes := []rune(s)
    if index >= 0 && index < len(runes) {
        runes[index] = unicode.ToLower(runes[index])
    }
    return string(runes)
}

func main() {
    // Define a string
    str := "Hello, World!"

    // Convert the character at index 0 to uppercase
    upperStr := toUpperCaseAtIndex(str, 0)
    fmt.Printf("Uppercase at index 0: %s\n", upperStr)

    // Convert the character at index 7 to lowercase
    lowerStr := toLowerCaseAtIndex(str, 7)
    fmt.Printf("Lowercase at index 7: %s\n", lowerStr)
}
```

### Explanation

1. **Import the `unicode` Package**:
   - The `unicode` package provides functions for character case conversion.

2. **Define Functions for Case Conversion at Specific Indices**:
   - We define `toUpperCaseAtIndex` to convert a character at a specific index to uppercase.
   - We define `toLowerCaseAtIndex` to convert a character at a specific index to lowercase.

3. **Convert and Print Characters at Specific Indices**:
   - We use `toUpperCaseAtIndex` to convert the character at index 0 to uppercase and print the result.
   - We use `toLowerCaseAtIndex` to convert the character at index 7 to lowercase and print the result.

### Detailed Output

The output of the above code will be:
```
Uppercase at index 0: Hello, World!
Lowercase at index 7: Hello, world!
```

### Summary

In Go, you can change the case of characters in a string using functions from the `strings` package for entire strings (`strings.ToUpper`, `strings.ToLower`) and from the `unicode` package for specific characters (`unicode.ToUpper`, `unicode.ToLower`). These functions allow you to perform case conversion effectively in your Go programs.