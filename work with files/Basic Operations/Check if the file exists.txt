\\ work with files — Basic Operations — Check if the file exists

To check if a file exists in Go, you can use the `os.Stat` function, which retrieves the file information. If the file does not exist, `os.Stat` returns an error. You can use this behavior to determine if the file is present.

### Example: Check if a File Exists

Let's create an example where we define a function to check if a file exists.

#### Step 1: Import Necessary Packages

First, import the necessary package.

```go
package main

import (
    "fmt"
    "os"
)
```

#### Step 2: Define the Function to Check if a File Exists

Create a function that takes a file path as input and checks if the file exists.

```go
// Function to check if a file exists
func fileExists(filePath string) bool {
    _, err := os.Stat(filePath)
    if os.IsNotExist(err) {
        return false
    }
    return err == nil
}
```

#### Step 3: Use the Function

Finally, use the `fileExists` function in the `main` function to check for the existence of a file.

```go
func main() {
    // File paths to check
    existingFile := "existing_file.txt"
    nonExistingFile := "non_existing_file.txt"

    // Check if the files exist
    if fileExists(existingFile) {
        fmt.Printf("File '%s' exists.\n", existingFile)
    } else {
        fmt.Printf("File '%s' does not exist.\n", existingFile)
    }

    if fileExists(nonExistingFile) {
        fmt.Printf("File '%s' exists.\n", nonExistingFile)
    } else {
        fmt.Printf("File '%s' does not exist.\n", nonExistingFile)
    }
}
```

### Explanation

1. **Import Necessary Packages**:
   - The `os` package is used for file operations.

2. **Define the `fileExists` Function**:
   - The `fileExists` function takes a file path as input.
   - It uses the `os.Stat` function to retrieve the file information.
   - If `os.Stat` returns an error and the error is `os.IsNotExist`, the function returns `false`, indicating that the file does not exist.
   - If `os.Stat` does not return an error, the function returns `true`, indicating that the file exists.

3. **Use the Function in `main`**:
   - In `main`, two file paths are defined: one for an existing file and one for a non-existing file.
   - The `fileExists` function is called for each file path, and the results are printed.

### Detailed Output

The program will check if `existing_file.txt` and `non_existing_file.txt` exist and print the results. For example:

```
File 'existing_file.txt' exists.
File 'non_existing_file.txt' does not exist.
```

### Summary

In Go, you can check if a file exists by using the `os.Stat` function. By defining a function that checks the result of `os.Stat` and handles the `os.IsNotExist` error, you can determine if a file is present. This approach is useful for verifying the existence of files before performing operations such as reading, writing, or deleting files.