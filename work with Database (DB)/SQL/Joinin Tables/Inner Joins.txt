\\ work with database(DB) — SQL — Joining Table — Inner Joins


An inner join in SQL is used to retrieve rows that have matching values in both tables being joined. This type of join is useful when you want to find records that have related data in both tables. Here's a detailed guide on how to use inner joins across different SQL databases with practical examples.

### Basic Syntax

```sql
SELECT column1, column2, ...
FROM table1
INNER JOIN table2
ON table1.common_column = table2.common_column;
```

### Example Tables

Assume we have two tables, `Employees` and `Departments`, with the following data:

```sql
CREATE TABLE Employees (
    emp_id INT PRIMARY KEY,
    emp_name VARCHAR(100),
    dept_id INT
);

CREATE TABLE Departments (
    dept_id INT PRIMARY KEY,
    dept_name VARCHAR(100)
);

INSERT INTO Employees (emp_id, emp_name, dept_id) VALUES
(1, 'Alice', 1),
(2, 'Bob', 2),
(3, 'Charlie', 3);

INSERT INTO Departments (dept_id, dept_name) VALUES
(1, 'HR'),
(2, 'Engineering'),
(3, 'Marketing');
```

### Performing an Inner Join

The goal is to retrieve a list of employees along with their department names.

#### MySQL

```sql
-- Inner join in MySQL
SELECT e.emp_id, e.emp_name, d.dept_name
FROM Employees e
INNER JOIN Departments d ON e.dept_id = d.dept_id;
```

#### PostgreSQL

```sql
-- Inner join in PostgreSQL
SELECT e.emp_id, e.emp_name, d.dept_name
FROM Employees e
INNER JOIN Departments d ON e.dept_id = d.dept_id;
```

#### Oracle

```sql
-- Inner join in Oracle
SELECT e.emp_id, e.emp_name, d.dept_name
FROM Employees e
INNER JOIN Departments d ON e.dept_id = d.dept_id;
```

#### SQLite

```sql
-- Inner join in SQLite
SELECT e.emp_id, e.emp_name, d.dept_name
FROM Employees e
INNER JOIN Departments d ON e.dept_id = d.dept_id;
```

#### SQL Server

```sql
-- Inner join in SQL Server
SELECT e.emp_id, e.emp_name, d.dept_name
FROM Employees e
INNER JOIN Departments d ON e.dept_id = d.dept_id;
```

### Practical Examples

#### Joining Multiple Tables

You can join more than two tables using multiple inner joins.

```sql
-- Assume another table named Projects
CREATE TABLE Projects (
    proj_id INT PRIMARY KEY,
    proj_name VARCHAR(100),
    dept_id INT
);

INSERT INTO Projects (proj_id, proj_name, dept_id) VALUES
(1, 'Project A', 1),
(2, 'Project B', 2),
(3, 'Project C', 3);

-- Join Employees, Departments, and Projects
SELECT e.emp_name, d.dept_name, p.proj_name
FROM Employees e
INNER JOIN Departments d ON e.dept_id = d.dept_id
INNER JOIN Projects p ON d.dept_id = p.dept_id;
```

#### Filtering Joined Data

You can apply `WHERE` clauses to filter the joined data.

```sql
-- Get employees in the Engineering department
SELECT e.emp_id, e.emp_name, d.dept_name
FROM Employees e
INNER JOIN Departments d ON e.dept_id = d.dept_id
WHERE d.dept_name = 'Engineering';
```

#### Using Aliases for Better Readability

Aliases can make your SQL queries more readable.

```sql
-- Use aliases for tables
SELECT e.emp_id, e.emp_name, d.dept_name
FROM Employees AS e
INNER JOIN Departments AS d ON e.dept_id = d.dept_id;
```

### Practical Scenario: Employee and Department Information

Retrieve a list of employees and their corresponding department names.

#### Data

`Employees`:
| emp_id | emp_name | dept_id |
|--------|----------|---------|
| 1      | Alice    | 1       |
| 2      | Bob      | 2       |
| 3      | Charlie  | 3       |

`Departments`:
| dept_id | dept_name  |
|---------|------------|
| 1       | HR         |
| 2       | Engineering|
| 3       | Marketing  |

#### Inner Join Result

| emp_id | emp_name | dept_name  |
|--------|----------|------------|
| 1      | Alice    | HR         |
| 2      | Bob      | Engineering|
| 3      | Charlie  | Marketing  |

### Performing the Join

```sql
-- Inner join Employees and Departments
SELECT e.emp_id, e.emp_name, d.dept_name
FROM Employees e
INNER JOIN Departments d ON e.dept_id = d.dept_id;
```

### Summary

An inner join is used to retrieve rows that have matching values in both tables being joined. It is useful for combining related data from different tables. This guide provides examples of how to perform inner joins in various SQL databases, including joining multiple tables and applying filters.

These examples demonstrate how to effectively perform an inner join across various SQL databases. If you have more specific queries or need further examples, feel free to ask! ✔️
