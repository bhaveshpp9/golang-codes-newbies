\\ work with database(DB) — SQL — Updating Tables — Adding a column


Adding a column to an existing table in SQL is a common operation that can be performed using the `ALTER TABLE` statement. Below are examples of how to add a column in various SQL databases, including MySQL, PostgreSQL, SQLite, Microsoft SQL Server, and Oracle.

### Example Table

Assume we have the following table:

```sql
CREATE TABLE Employees (
    emp_id INT PRIMARY KEY,
    emp_name VARCHAR(100),
    dept_id INT,
    salary INT
);
```

We want to add a column named `hire_date` to the `Employees` table.

### MySQL

In MySQL, you use the `ALTER TABLE` statement with the `ADD COLUMN` clause to add a new column.

#### Syntax

```sql
ALTER TABLE table_name
ADD COLUMN column_name column_type;
```

#### Example

```sql
-- Add a column named hire_date to the Employees table
ALTER TABLE Employees
ADD COLUMN hire_date DATE;
```

### PostgreSQL

In PostgreSQL, you use the `ALTER TABLE` statement with the `ADD COLUMN` clause to add a new column.

#### Syntax

```sql
ALTER TABLE table_name
ADD COLUMN column_name column_type;
```

#### Example

```sql
-- Add a column named hire_date to the Employees table
ALTER TABLE Employees
ADD COLUMN hire_date DATE;
```

### SQLite

In SQLite, you use the `ALTER TABLE` statement with the `ADD COLUMN` clause to add a new column. Note that you can only add one column at a time in SQLite.

#### Syntax

```sql
ALTER TABLE table_name
ADD COLUMN column_name column_type;
```

#### Example

```sql
-- Add a column named hire_date to the Employees table
ALTER TABLE Employees
ADD COLUMN hire_date DATE;
```

### Microsoft SQL Server (MS SQL)

In MS SQL Server, you use the `ALTER TABLE` statement with the `ADD` clause to add a new column.

#### Syntax

```sql
ALTER TABLE table_name
ADD column_name column_type;
```

#### Example

```sql
-- Add a column named hire_date to the Employees table
ALTER TABLE Employees
ADD hire_date DATE;
```

### Oracle

In Oracle, you use the `ALTER TABLE` statement with the `ADD` clause to add a new column.

#### Syntax

```sql
ALTER TABLE table_name
ADD column_name column_type;
```

#### Example

```sql
-- Add a column named hire_date to the Employees table
ALTER TABLE Employees
ADD hire_date DATE;
```

### Practical Example: Adding a Column

Here is a practical example of adding a column named `hire_date` to the `Employees` table across various SQL databases.

#### MySQL Example

```sql
-- Add a column named hire_date to the Employees table in MySQL
ALTER TABLE Employees
ADD COLUMN hire_date DATE;
```

#### PostgreSQL Example

```sql
-- Add a column named hire_date to the Employees table in PostgreSQL
ALTER TABLE Employees
ADD COLUMN hire_date DATE;
```

#### SQLite Example

```sql
-- Add a column named hire_date to the Employees table in SQLite
ALTER TABLE Employees
ADD COLUMN hire_date DATE;
```

#### MS SQL Server Example

```sql
-- Add a column named hire_date to the Employees table in MS SQL Server
ALTER TABLE Employees
ADD hire_date DATE;
```

#### Oracle Example

```sql
-- Add a column named hire_date to the Employees table in Oracle
ALTER TABLE Employees
ADD hire_date DATE;
```

### Summary

Adding a column to an existing table involves using the `ALTER TABLE` statement with the `ADD COLUMN` clause (or just `ADD` in some databases). The provided examples demonstrate how to add a new column effectively in MySQL, PostgreSQL, SQLite, MS SQL Server, and Oracle.

If you have more specific queries or need further examples, feel free to ask! ✔️
