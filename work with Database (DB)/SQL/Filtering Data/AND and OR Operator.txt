\\ work with database(DB) — SQL — Filtering Data — AND and OR Operator


The `AND` and `OR` operators in SQL are used to combine multiple conditions in a `WHERE` clause, allowing for more complex and precise filtering of data. The `AND` operator requires all conditions to be true for a row to be included in the result set, while the `OR` operator requires at least one condition to be true.

### Syntax

The basic syntax for using the `AND` and `OR` operators in a `WHERE` clause is:

```sql
SELECT column1, column2, ...
FROM table_name
WHERE condition1 [AND|OR] condition2 [AND|OR] condition3 ...;
```

### Examples in Different Databases

#### MySQL

```sql
-- Find all customers who are from 'New York' and have a credit limit greater than 5000
SELECT * FROM Customers
WHERE City = 'New York' AND CreditLimit > 5000;

-- Find all products that are either in category 'Electronics' or have a price less than 100
SELECT * FROM Products
WHERE Category = 'Electronics' OR Price < 100;
```

#### PostgreSQL

```sql
-- Find all employees who are in the 'HR' department and have a salary greater than 60000
SELECT * FROM Employees
WHERE Department = 'HR' AND Salary > 60000;

-- Find all orders that are either shipped or have a total amount greater than 1000
SELECT * FROM Orders
WHERE Status = 'Shipped' OR TotalAmount > 1000;
```

#### Oracle

```sql
-- Find all students who are in grade 'A' and have an attendance greater than 90%
SELECT * FROM Students
WHERE Grade = 'A' AND Attendance > 90;

-- Find all books that are either published by 'Penguin' or have more than 500 pages
SELECT * FROM Books
WHERE Publisher = 'Penguin' OR Pages > 500;
```

#### SQLite

```sql
-- Find all movies that are rated 'PG' and have a runtime less than 120 minutes
SELECT * FROM Movies
WHERE Rating = 'PG' AND Runtime < 120;

-- Find all articles that are either written by 'John Doe' or published after 2020
SELECT * FROM Articles
WHERE Author = 'John Doe' OR PublicationYear > 2020;
```

#### SQL Server

```sql
-- Find all projects that are completed and have a budget greater than 100000
SELECT * FROM Projects
WHERE Status = 'Completed' AND Budget > 100000;

-- Find all employees who are either managers or work in the 'IT' department
SELECT * FROM Employees
WHERE JobTitle = 'Manager' OR Department = 'IT';
```

### Practical Examples and Use Cases

#### Combining AND and OR Conditions

You can combine `AND` and `OR` conditions to create more complex queries. It's important to use parentheses to ensure the correct order of evaluation.

```sql
-- Find all customers who are from 'New York' and have a credit limit greater than 5000, or who are from 'Los Angeles'
SELECT * FROM Customers
WHERE (City = 'New York' AND CreditLimit > 5000) OR City = 'Los Angeles';
```

#### Filtering Data with Multiple Conditions

You can filter data with multiple conditions to get precise results.

```sql
-- Find all employees who are in the 'Sales' department, have a salary greater than 50000, and are not managers
SELECT * FROM Employees
WHERE Department = 'Sales' AND Salary > 50000 AND JobTitle <> 'Manager';
```

### Using AND and OR in Subqueries

You can use `AND` and `OR` operators in subqueries to further refine your queries.

```sql
-- Find all customers who have placed orders with a total amount greater than 1000
SELECT * FROM Customers
WHERE CustomerID IN (
    SELECT CustomerID
    FROM Orders
    WHERE TotalAmount > 1000
);
```

### Case Sensitivity

The case sensitivity of string comparisons depends on the database and its collation settings. Generally:

- **MySQL**: Case-insensitive by default for `VARCHAR` and `CHAR` types.
- **PostgreSQL**: Case-sensitive by default. Use `ILIKE` for case-insensitive comparisons.
- **Oracle**: Case-sensitive by default.
- **SQLite**: Case-insensitive by default for ASCII characters.
- **SQL Server**: Case-insensitive by default based on collation settings.

### Summary

The `AND` and `OR` operators are essential tools for filtering data based on multiple conditions in SQL. They allow you to create complex queries that precisely match your filtering criteria. Understanding how to effectively use these operators, along with parentheses to control the order of evaluation, is crucial for building accurate and efficient SQL queries.

These examples demonstrate how to effectively use the `AND` and `OR` operators in various scenarios. If you have more specific queries or need further examples, feel free to ask! ✔️
