\\ work with database(DB) — SQL — Filtering Data — The WHERE Clause Operators


The `WHERE` clause in SQL is used to filter records that meet specific conditions. Various operators can be used within the `WHERE` clause to define these conditions, including comparison operators, logical operators, and special operators like `BETWEEN`, `IN`, and `LIKE`. Here’s a detailed guide on how to use these operators to filter data across different SQL databases.

### Basic Syntax

```sql
SELECT column1, column2, ...
FROM table_name
WHERE condition;
```

### Comparison Operators

Comparison operators are used to compare two values. Common comparison operators include:

- `=` : Equal to
- `<>` or `!=` : Not equal to
- `>` : Greater than
- `<` : Less than
- `>=` : Greater than or equal to
- `<=` : Less than or equal to

#### Examples

```sql
-- Find all customers aged 30
SELECT * FROM Customers
WHERE Age = 30;

-- Find all products priced not equal to 100
SELECT * FROM Products
WHERE Price <> 100;

-- Find all employees with salaries greater than 50000
SELECT * FROM Employees
WHERE Salary > 50000;

-- Find all students with grades less than 60
SELECT * FROM Students
WHERE Grade < 60;

-- Find all orders with total amount greater than or equal to 1000
SELECT * FROM Orders
WHERE TotalAmount >= 1000;

-- Find all events scheduled before '2023-12-31'
SELECT * FROM Events
WHERE EventDate <= '2023-12-31';
```

### Logical Operators

Logical operators combine multiple conditions:

- `AND` : All conditions must be true
- `OR` : At least one condition must be true
- `NOT` : Negates a condition

#### Examples

```sql
-- Find all employees in the 'HR' department with salaries greater than 60000
SELECT * FROM Employees
WHERE Department = 'HR' AND Salary > 60000;

-- Find all products in the 'Electronics' category or priced below 50
SELECT * FROM Products
WHERE Category = 'Electronics' OR Price < 50;

-- Find all students not in grade 'A'
SELECT * FROM Students
WHERE NOT Grade = 'A';
```

### Special Operators

#### BETWEEN

The `BETWEEN` operator selects values within a given range.

```sql
-- Find all products priced between 10 and 50
SELECT * FROM Products
WHERE Price BETWEEN 10 AND 50;

-- Find all orders placed between '2023-01-01' and '2023-12-31'
SELECT * FROM Orders
WHERE OrderDate BETWEEN '2023-01-01' AND '2023-12-31';
```

#### IN

The `IN` operator allows you to specify multiple values in a `WHERE` clause.

```sql
-- Find all customers from 'New York', 'Los Angeles', or 'Chicago'
SELECT * FROM Customers
WHERE City IN ('New York', 'Los Angeles', 'Chicago');

-- Find all employees in departments 1, 2, or 3
SELECT * FROM Employees
WHERE DepartmentID IN (1, 2, 3);
```

#### LIKE

The `LIKE` operator is used for pattern matching with wildcards:

- `%` : Matches zero or more characters
- `_` : Matches exactly one character

```sql
-- Find all customers whose names start with 'Jo'
SELECT * FROM Customers
WHERE CustomerName LIKE 'Jo%';

-- Find all products that contain 'phone'
SELECT * FROM Products
WHERE ProductName LIKE '%phone%';

-- Find all employees whose last names end with 'son'
SELECT * FROM Employees
WHERE LastName LIKE '%son';

-- Find all orders where the order code starts with 'A' followed by any character and ends with '5'
SELECT * FROM Orders
WHERE OrderCode LIKE 'A_5';
```

#### IS NULL and IS NOT NULL

The `IS NULL` and `IS NOT NULL` operators are used to filter records with `NULL` or non-`NULL` values.

```sql
-- Find all customers without an email address
SELECT * FROM Customers
WHERE Email IS NULL;

-- Find all products with a description
SELECT * FROM Products
WHERE Description IS NOT NULL;
```

### Combining Conditions

You can combine multiple conditions using `AND`, `OR`, and parentheses to control the order of evaluation.

```sql
-- Find all customers from 'New York' with a credit limit greater than 5000, or from 'Los Angeles'
SELECT * FROM Customers
WHERE (City = 'New York' AND CreditLimit > 5000) OR City = 'Los Angeles';

-- Find all products in the 'Electronics' category priced between 100 and 500
SELECT * FROM Products
WHERE Category = 'Electronics' AND Price BETWEEN 100 AND 500;
```

### Practical Examples and Use Cases

#### Filtering Numeric Ranges

```sql
-- Find all employees with ages between 25 and 40
SELECT * FROM Employees
WHERE Age BETWEEN 25 AND 40;
```

#### Filtering Date Ranges

```sql
-- Find all bookings made in the last month
SELECT * FROM Bookings
WHERE BookingDate >= DATEADD(month, -1, GETDATE()) AND BookingDate <= GETDATE();
```

#### Filtering Lists of Values

```sql
-- Find all orders from customers with IDs 1, 2, or 3
SELECT * FROM Orders
WHERE CustomerID IN (1, 2, 3);
```

### Summary

The `WHERE` clause in SQL is essential for filtering data based on specific conditions. Using comparison operators, logical operators, and special operators like `BETWEEN`, `IN`, and `LIKE`, you can create complex and precise queries to retrieve the data you need. Understanding how to use these operators effectively is crucial for managing and analyzing data in SQL databases.

These examples demonstrate how to effectively use `WHERE` clause operators in various scenarios. If you have more specific queries or need further examples, feel free to ask! ✔️
