\\ work with database(DB) — SQL — Retrieving Data — Using Comments


Using comments in SQL is essential for documenting your code, making it easier to understand and maintain. Comments can be used to explain the purpose of queries, describe complex parts of the code, and temporarily disable parts of the query during testing. Different SQL databases support comments in a similar way, including MySQL, PostgreSQL, SQLite, Microsoft SQL Server, Microsoft Access, Interbase, Firebird, and Oracle.

### Types of Comments in SQL

1. **Single-line comments**: Use `--` to start a single-line comment.
2. **Multi-line comments**: Use `/* */` to start and end a multi-line comment.

### Example Table

Assume we have a table named `Employees` with the following structure and data:

```sql
CREATE TABLE Employees (
    emp_id INT PRIMARY KEY,
    emp_name VARCHAR(100),
    dept_id INT,
    salary INT
);

INSERT INTO Employees (emp_id, emp_name, dept_id, salary) VALUES
(1, 'Alice', 1, 50000),
(2, 'Bob', 2, 60000),
(3, 'Charlie', 1, 55000),
(4, 'David', 3, 45000),
(5, 'Eva', 2, 70000);
```

### Using Comments

#### MySQL

```sql
-- This is a single-line comment in MySQL
SELECT emp_id, emp_name, salary
FROM Employees
WHERE salary > 50000;  -- Retrieve employees with salary greater than 50000

/*
This is a multi-line comment in MySQL.
It can span multiple lines.
*/
SELECT emp_id, emp_name, salary
FROM Employees
WHERE salary > 50000;
```

#### PostgreSQL

```sql
-- This is a single-line comment in PostgreSQL
SELECT emp_id, emp_name, salary
FROM Employees
WHERE salary > 50000;  -- Retrieve employees with salary greater than 50000

/*
This is a multi-line comment in PostgreSQL.
It can span multiple lines.
*/
SELECT emp_id, emp_name, salary
FROM Employees
WHERE salary > 50000;
```

#### SQLite

```sql
-- This is a single-line comment in SQLite
SELECT emp_id, emp_name, salary
FROM Employees
WHERE salary > 50000;  -- Retrieve employees with salary greater than 50000

/*
This is a multi-line comment in SQLite.
It can span multiple lines.
*/
SELECT emp_id, emp_name, salary
FROM Employees
WHERE salary > 50000;
```

#### Microsoft SQL Server (MS SQL)

```sql
-- This is a single-line comment in MS SQL Server
SELECT emp_id, emp_name, salary
FROM Employees
WHERE salary > 50000;  -- Retrieve employees with salary greater than 50000

/*
This is a multi-line comment in MS SQL Server.
It can span multiple lines.
*/
SELECT emp_id, emp_name, salary
FROM Employees
WHERE salary > 50000;
```

#### Microsoft Access

```sql
-- This is a single-line comment in Access
SELECT emp_id, emp_name, salary
FROM Employees
WHERE salary > 50000;  -- Retrieve employees with salary greater than 50000

/*
This is a multi-line comment in Access.
It can span multiple lines.
*/
SELECT emp_id, emp_name, salary
FROM Employees
WHERE salary > 50000;
```

#### Interbase

```sql
-- This is a single-line comment in Interbase
SELECT emp_id, emp_name, salary
FROM Employees
WHERE salary > 50000;  -- Retrieve employees with salary greater than 50000

/*
This is a multi-line comment in Interbase.
It can span multiple lines.
*/
SELECT emp_id, emp_name, salary
FROM Employees
WHERE salary > 50000;
```

#### Firebird

```sql
-- This is a single-line comment in Firebird
SELECT emp_id, emp_name, salary
FROM Employees
WHERE salary > 50000;  -- Retrieve employees with salary greater than 50000

/*
This is a multi-line comment in Firebird.
It can span multiple lines.
*/
SELECT emp_id, emp_name, salary
FROM Employees
WHERE salary > 50000;
```

#### Oracle

```sql
-- This is a single-line comment in Oracle
SELECT emp_id, emp_name, salary
FROM Employees
WHERE salary > 50000;  -- Retrieve employees with salary greater than 50000

/*
This is a multi-line comment in Oracle.
It can span multiple lines.
*/
SELECT emp_id, emp_name, salary
FROM Employees
WHERE salary > 50000;
```

### Practical Scenario: Using Comments to Document Queries

Using comments to explain a complex query that retrieves employees with salaries above a certain threshold and sorts them by department.

#### Example

```sql
-- Retrieve employees with salaries above 55000
-- and order the results by department ID and salary
SELECT emp_id, emp_name, dept_id, salary
FROM Employees
WHERE salary > 55000  -- Filter condition
ORDER BY dept_id, salary DESC;  -- Sorting by department and then by salary in descending order

/*
This query retrieves employees with salaries greater than 55000.
It sorts the employees by their department ID first,
and then by their salary in descending order within each department.
This helps in analyzing salary distribution within departments.
*/
```

### Summary

Using comments in SQL helps document your code, making it easier to understand and maintain. Single-line comments (`--`) and multi-line comments (`/* */`) are supported across various SQL databases, including MySQL, PostgreSQL, SQLite, Microsoft SQL Server, Microsoft Access, Interbase, Firebird, and Oracle. These examples demonstrate how to use comments to explain and document SQL queries effectively.

If you have more specific queries or need further examples, feel free to ask! ✔️
