\\ work with database(DB) — SQL — Retrieving Data — Limiting Results — Oracle


In Oracle, you can limit the number of rows returned by a query using the `ROWNUM` pseudocolumn or the `FETCH FIRST` clause. Starting from Oracle 12c, the `FETCH FIRST` clause is preferred due to its ANSI SQL compliance and more intuitive syntax.

### Example Table

Assume we have a table named `Employees` with the following structure and data:

```sql
CREATE TABLE Employees (
    emp_id INT PRIMARY KEY,
    emp_name VARCHAR(100),
    dept_id INT,
    salary INT
);

INSERT INTO Employees (emp_id, emp_name, dept_id, salary) VALUES
(1, 'Alice', 1, 50000),
(2, 'Bob', 2, 60000),
(3, 'Charlie', 1, 55000),
(4, 'David', 3, 45000),
(5, 'Eva', 2, 70000);
```

### Limiting Results with `ROWNUM`

The `ROWNUM` pseudocolumn assigns a unique number to each row in the result set. You can use it to limit the number of rows returned.

#### Basic Syntax

```sql
SELECT column1, column2, ...
FROM table_name
WHERE ROWNUM <= n;
```

#### Practical Examples

**Retrieve the First 3 Employees**

```sql
-- Retrieve the first 3 employees
SELECT emp_id, emp_name, dept_id, salary
FROM Employees
WHERE ROWNUM <= 3;
```

**Retrieve Employees with the Highest Salaries (Top N)**

To get the top N records, you need to use a subquery.

```sql
-- Retrieve the top 3 highest paid employees
SELECT * FROM (
    SELECT emp_id, emp_name, dept_id, salary
    FROM Employees
    ORDER BY salary DESC
)
WHERE ROWNUM <= 3;
```

### Limiting Results with `FETCH FIRST`

Starting from Oracle 12c, the `FETCH FIRST` clause provides a more standard way to limit the number of rows.

#### Basic Syntax

```sql
SELECT column1, column2, ...
FROM table_name
FETCH FIRST n ROWS ONLY;
```

#### Practical Examples

**Retrieve the First 3 Employees**

```sql
-- Retrieve the first 3 employees
SELECT emp_id, emp_name, dept_id, salary
FROM Employees
FETCH FIRST 3 ROWS ONLY;
```

**Retrieve Employees with the Highest Salaries (Top N)**

```sql
-- Retrieve the top 3 highest paid employees
SELECT emp_id, emp_name, dept_id, salary
FROM Employees
ORDER BY salary DESC
FETCH FIRST 3 ROWS ONLY;
```

### Pagination with `OFFSET FETCH`

To implement pagination, you can use the `OFFSET FETCH` clause.

#### Basic Syntax

```sql
SELECT column1, column2, ...
FROM table_name
ORDER BY column_name
OFFSET m ROWS FETCH NEXT n ROWS ONLY;
```

#### Practical Examples

**Retrieve Employees Ordered by Salary, with Pagination**

```sql
-- Retrieve the second page of 3 employees, ordered by salary
SELECT emp_id, emp_name, dept_id, salary
FROM Employees
ORDER BY salary DESC
OFFSET 3 ROWS FETCH NEXT 3 ROWS ONLY;
```

### Practical Scenario: Retrieving Top N Employees

**Using `ROWNUM`**

```sql
-- Retrieve the top 3 highest paid employees using ROWNUM
SELECT * FROM (
    SELECT emp_id, emp_name, dept_id, salary
    FROM Employees
    ORDER BY salary DESC
)
WHERE ROWNUM <= 3;
```

**Using `FETCH FIRST`**

```sql
-- Retrieve the top 3 highest paid employees using FETCH FIRST
SELECT emp_id, emp_name, dept_id, salary
FROM Employees
ORDER BY salary DESC
FETCH FIRST 3 ROWS ONLY;
```

### Summary

In Oracle, you can limit the number of rows returned by a query using the `ROWNUM` pseudocolumn or the `FETCH FIRST` clause. The `FETCH FIRST` clause is preferred for its ANSI SQL compliance and clearer syntax. Additionally, you can implement pagination using the `OFFSET FETCH` clause. These examples demonstrate how to retrieve a limited number of rows from a table in Oracle.

If you have more specific queries or need further examples, feel free to ask! ✔️
