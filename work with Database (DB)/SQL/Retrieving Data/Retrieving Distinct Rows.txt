\\ work with database(DB) — SQL — Retrieving Data — Retrieving Distinct Rows


Retrieving distinct rows from a table in SQL is achieved using the `DISTINCT` keyword. This ensures that the result set contains only unique rows, eliminating duplicates. Below are examples of how to retrieve distinct rows across various SQL databases, including MySQL, PostgreSQL, SQLite, Microsoft SQL Server, Microsoft Access, Interbase, Firebird, and Oracle.

### Example Table

Assume we have a table named `Employees` with the following structure and data:

```sql
CREATE TABLE Employees (
    emp_id INT PRIMARY KEY,
    emp_name VARCHAR(100),
    dept_id INT,
    salary INT
);

INSERT INTO Employees (emp_id, emp_name, dept_id, salary) VALUES
(1, 'Alice', 1, 50000),
(2, 'Bob', 2, 60000),
(3, 'Charlie', 1, 55000),
(4, 'David', 3, 45000),
(5, 'Eva', 2, 70000),
(6, 'Frank', 2, 60000);  -- Note: Frank has the same salary as Bob
```

### Retrieving Distinct Rows

#### MySQL

```sql
-- Retrieve distinct salaries
SELECT DISTINCT salary FROM Employees;
```

#### PostgreSQL

```sql
-- Retrieve distinct salaries
SELECT DISTINCT salary FROM Employees;
```

#### SQLite

```sql
-- Retrieve distinct salaries
SELECT DISTINCT salary FROM Employees;
```

#### Microsoft SQL Server (MS SQL)

```sql
-- Retrieve distinct salaries
SELECT DISTINCT salary FROM Employees;
```

#### Microsoft Access

```sql
-- Retrieve distinct salaries
SELECT DISTINCT salary FROM Employees;
```

#### Interbase

```sql
-- Retrieve distinct salaries
SELECT DISTINCT salary FROM Employees;
```

#### Firebird

```sql
-- Retrieve distinct salaries
SELECT DISTINCT salary FROM Employees;
```

#### Oracle

```sql
-- Retrieve distinct salaries
SELECT DISTINCT salary FROM Employees;
```

### Practical Examples

#### Retrieve Distinct Department IDs

```sql
-- MySQL
SELECT DISTINCT dept_id FROM Employees;

-- PostgreSQL
SELECT DISTINCT dept_id FROM Employees;

-- SQLite
SELECT DISTINCT dept_id FROM Employees;

-- MS SQL
SELECT DISTINCT dept_id FROM Employees;

-- Access
SELECT DISTINCT dept_id FROM Employees;

-- Interbase
SELECT DISTINCT dept_id FROM Employees;

-- Firebird
SELECT DISTINCT dept_id FROM Employees;

-- Oracle
SELECT DISTINCT dept_id FROM Employees;
```

#### Retrieve Distinct Combinations of Department IDs and Salaries

```sql
-- MySQL
SELECT DISTINCT dept_id, salary FROM Employees;

-- PostgreSQL
SELECT DISTINCT dept_id, salary FROM Employees;

-- SQLite
SELECT DISTINCT dept_id, salary FROM Employees;

-- MS SQL
SELECT DISTINCT dept_id, salary FROM Employees;

-- Access
SELECT DISTINCT dept_id, salary FROM Employees;

-- Interbase
SELECT DISTINCT dept_id, salary FROM Employees;

-- Firebird
SELECT DISTINCT dept_id, salary FROM Employees;

-- Oracle
SELECT DISTINCT dept_id, salary FROM Employees;
```

#### Retrieve All Columns with Distinct Rows Based on a Subset of Columns

Sometimes, you may want to retrieve all columns but ensure that the rows are distinct based on certain columns. This can be done using a subquery.

##### Example: Retrieve All Columns with Distinct Department IDs

```sql
-- MySQL
SELECT * FROM Employees WHERE dept_id IN (SELECT DISTINCT dept_id FROM Employees);

-- PostgreSQL
SELECT * FROM Employees WHERE dept_id IN (SELECT DISTINCT dept_id FROM Employees);

-- SQLite
SELECT * FROM Employees WHERE dept_id IN (SELECT DISTINCT dept_id FROM Employees);

-- MS SQL
SELECT * FROM Employees WHERE dept_id IN (SELECT DISTINCT dept_id FROM Employees);

-- Access
SELECT * FROM Employees WHERE dept_id IN (SELECT DISTINCT dept_id FROM Employees);

-- Interbase
SELECT * FROM Employees WHERE dept_id IN (SELECT DISTINCT dept_id FROM Employees);

-- Firebird
SELECT * FROM Employees WHERE dept_id IN (SELECT DISTINCT dept_id FROM Employees);

-- Oracle
SELECT * FROM Employees WHERE dept_id IN (SELECT DISTINCT dept_id FROM Employees);
```

### Practical Scenario: Retrieving Distinct Rows for Analysis

Retrieve distinct department IDs and their corresponding salaries to analyze salary distribution across departments.

#### Example

```sql
-- Retrieve distinct department IDs and salaries
SELECT DISTINCT dept_id, salary FROM Employees;
```

| dept_id | salary |
|---------|--------|
| 1       | 50000  |
| 1       | 55000  |
| 2       | 60000  |
| 2       | 70000  |
| 3       | 45000  |

### Summary

Using the `DISTINCT` keyword in SQL allows you to eliminate duplicate rows from the result set, ensuring that only unique rows are returned. This is useful for various analyses, such as identifying unique values or combinations of values across different columns. These examples demonstrate how to retrieve distinct rows from a table in various SQL databases.

If you have more specific queries or need further examples, feel free to ask! ✔️
