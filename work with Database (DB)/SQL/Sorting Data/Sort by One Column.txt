\\ work with database(DB) — SQL — Sorting data — Sort by one column


Sorting data in SQL by one column is done using the `ORDER BY` clause. This clause allows you to sort the result set based on a specified column in either ascending (`ASC`) or descending (`DESC`) order. Below are examples of how to sort data by one column across various SQL databases, including MySQL, PostgreSQL, SQLite, Microsoft SQL Server, Microsoft Access, Interbase, Firebird, and Oracle.

### Example Table

Assume we have a table named `Employees` with the following structure and data:

```sql
CREATE TABLE Employees (
    emp_id INT PRIMARY KEY,
    emp_name VARCHAR(100),
    dept_id INT,
    salary INT
);

INSERT INTO Employees (emp_id, emp_name, dept_id, salary) VALUES
(1, 'Alice', 1, 50000),
(2, 'Bob', 2, 60000),
(3, 'Charlie', 1, 55000),
(4, 'David', 3, 45000),
(5, 'Eva', 2, 70000);
```

### Sorting Data by One Column

#### MySQL

```sql
-- Sort by emp_name in ascending order
SELECT emp_id, emp_name, dept_id, salary
FROM Employees
ORDER BY emp_name ASC;

-- Sort by salary in descending order
SELECT emp_id, emp_name, dept_id, salary
FROM Employees
ORDER BY salary DESC;
```

#### PostgreSQL

```sql
-- Sort by emp_name in ascending order
SELECT emp_id, emp_name, dept_id, salary
FROM Employees
ORDER BY emp_name ASC;

-- Sort by salary in descending order
SELECT emp_id, emp_name, dept_id, salary
FROM Employees
ORDER BY salary DESC;
```

#### SQLite

```sql
-- Sort by emp_name in ascending order
SELECT emp_id, emp_name, dept_id, salary
FROM Employees
ORDER BY emp_name ASC;

-- Sort by salary in descending order
SELECT emp_id, emp_name, dept_id, salary
FROM Employees
ORDER BY salary DESC;
```

#### Microsoft SQL Server (MS SQL)

```sql
-- Sort by emp_name in ascending order
SELECT emp_id, emp_name, dept_id, salary
FROM Employees
ORDER BY emp_name ASC;

-- Sort by salary in descending order
SELECT emp_id, emp_name, dept_id, salary
FROM Employees
ORDER BY salary DESC;
```

#### Microsoft Access

```sql
-- Sort by emp_name in ascending order
SELECT emp_id, emp_name, dept_id, salary
FROM Employees
ORDER BY emp_name ASC;

-- Sort by salary in descending order
SELECT emp_id, emp_name, dept_id, salary
FROM Employees
ORDER BY salary DESC;
```

#### Interbase

```sql
-- Sort by emp_name in ascending order
SELECT emp_id, emp_name, dept_id, salary
FROM Employees
ORDER BY emp_name ASC;

-- Sort by salary in descending order
SELECT emp_id, emp_name, dept_id, salary
FROM Employees
ORDER BY salary DESC;
```

#### Firebird

```sql
-- Sort by emp_name in ascending order
SELECT emp_id, emp_name, dept_id, salary
FROM Employees
ORDER BY emp_name ASC;

-- Sort by salary in descending order
SELECT emp_id, emp_name, dept_id, salary
FROM Employees
ORDER BY salary DESC;
```

#### Oracle

```sql
-- Sort by emp_name in ascending order
SELECT emp_id, emp_name, dept_id, salary
FROM Employees
ORDER BY emp_name ASC;

-- Sort by salary in descending order
SELECT emp_id, emp_name, dept_id, salary
FROM Employees
ORDER BY salary DESC;
```

### Practical Scenario: Sorting Data for Analysis

#### Example: Retrieve Employees Ordered by Name

```sql
-- MySQL
SELECT emp_id, emp_name, dept_id, salary
FROM Employees
ORDER BY emp_name ASC;

-- PostgreSQL
SELECT emp_id, emp_name, dept_id, salary
FROM Employees
ORDER BY emp_name ASC;

-- SQLite
SELECT emp_id, emp_name, dept_id, salary
FROM Employees
ORDER BY emp_name ASC;

-- MS SQL
SELECT emp_id, emp_name, dept_id, salary
FROM Employees
ORDER BY emp_name ASC;

-- Access
SELECT emp_id, emp_name, dept_id, salary
FROM Employees
ORDER BY emp_name ASC;

-- Interbase
SELECT emp_id, emp_name, dept_id, salary
FROM Employees
ORDER BY emp_name ASC;

-- Firebird
SELECT emp_id, emp_name, dept_id, salary
FROM Employees
ORDER BY emp_name ASC;

-- Oracle
SELECT emp_id, emp_name, dept_id, salary
FROM Employees
ORDER BY emp_name ASC;
```

#### Example: Retrieve Employees Ordered by Salary

```sql
-- MySQL
SELECT emp_id, emp_name, dept_id, salary
FROM Employees
ORDER BY salary DESC;

-- PostgreSQL
SELECT emp_id, emp_name, dept_id, salary
FROM Employees
ORDER BY salary DESC;

-- SQLite
SELECT emp_id, emp_name, dept_id, salary
FROM Employees
ORDER BY salary DESC;

-- MS SQL
SELECT emp_id, emp_name, dept_id, salary
FROM Employees
ORDER BY salary DESC;

-- Access
SELECT emp_id, emp_name, dept_id, salary
FROM Employees
ORDER BY salary DESC;

-- Interbase
SELECT emp_id, emp_name, dept_id, salary
FROM Employees
ORDER BY salary DESC;

-- Firebird
SELECT emp_id, emp_name, dept_id, salary
FROM Employees
ORDER BY salary DESC;

-- Oracle
SELECT emp_id, emp_name, dept_id, salary
FROM Employees
ORDER BY salary DESC;
```

### Summary

Using the `ORDER BY` clause in SQL allows you to sort the result set based on a specified column in either ascending (`ASC`) or descending (`DESC`) order. This guide provides examples of how to use the `ORDER BY` clause to sort data by one column across various SQL databases.

These examples demonstrate how to effectively sort data by one column in various SQL databases. If you have more specific queries or need further examples, feel free to ask! ✔️
