\\ work with database(DB) — SQL — Field data types — Type Conversion methods — Cast Function


In SQL, the `CAST` function is used to convert a value from one data type to another. This function is widely supported across various SQL databases, including MySQL, PostgreSQL, Oracle, SQLite, and SQL Server. The `CAST` function is particularly useful for ensuring that data types are compatible within expressions and queries.

### Syntax

The general syntax for the `CAST` function is as follows:

```sql
CAST(value AS target_data_type)
```

### Examples in Different Databases

Here are examples of how to use the `CAST` function in different databases:

#### MySQL

```sql
SELECT CAST('123' AS SIGNED) AS IntegerValue; -- Convert string to integer
SELECT CAST(123.45 AS CHAR) AS StringValue; -- Convert float to string
SELECT CAST('2023-05-10' AS DATE) AS DateValue; -- Convert string to date
```

#### PostgreSQL

```sql
SELECT CAST('123' AS INTEGER) AS IntegerValue; -- Convert string to integer
SELECT CAST(123.45 AS TEXT) AS StringValue; -- Convert float to string
SELECT CAST('2023-05-10' AS DATE) AS DateValue; -- Convert string to date
```

#### Oracle

```sql
SELECT CAST('123' AS NUMBER) AS IntegerValue FROM dual; -- Convert string to number
SELECT CAST(123.45 AS VARCHAR2(10)) AS StringValue FROM dual; -- Convert float to string
SELECT CAST('2023-05-10' AS DATE) AS DateValue FROM dual; -- Convert string to date
```

#### SQLite

```sql
SELECT CAST('123' AS INTEGER) AS IntegerValue; -- Convert string to integer
SELECT CAST(123.45 AS TEXT) AS StringValue; -- Convert float to string
SELECT CAST('2023-05-10' AS DATE) AS DateValue; -- Convert string to date
```

#### SQL Server

```sql
SELECT CAST('123' AS INT) AS IntegerValue; -- Convert string to integer
SELECT CAST(123.45 AS VARCHAR(10)) AS StringValue; -- Convert float to string
SELECT CAST('2023-05-10' AS DATE) AS DateValue; -- Convert string to date
```

### Practical Examples

#### Converting Strings to Numbers

Sometimes, numeric values are stored as strings, and you need to convert them to numbers for arithmetic operations.

```sql
-- MySQL Example
SELECT CAST('123' AS SIGNED) + 10 AS Result;

-- PostgreSQL Example
SELECT CAST('123' AS INTEGER) + 10 AS Result;

-- Oracle Example
SELECT CAST('123' AS NUMBER) + 10 AS Result FROM dual;

-- SQLite Example
SELECT CAST('123' AS INTEGER) + 10 AS Result;

-- SQL Server Example
SELECT CAST('123' AS INT) + 10 AS Result;
```

#### Converting Numbers to Strings

You might need to convert numbers to strings for concatenation with other strings.

```sql
-- MySQL Example
SELECT CONCAT('The value is ', CAST(123.45 AS CHAR)) AS Result;

-- PostgreSQL Example
SELECT 'The value is ' || CAST(123.45 AS TEXT) AS Result;

-- Oracle Example
SELECT 'The value is ' || CAST(123.45 AS VARCHAR2(10)) AS Result FROM dual;

-- SQLite Example
SELECT 'The value is ' || CAST(123.45 AS TEXT) AS Result;

-- SQL Server Example
SELECT 'The value is ' + CAST(123.45 AS VARCHAR(10)) AS Result;
```

#### Converting Strings to Dates

Converting strings to dates is common when dates are stored as text.

```sql
-- MySQL Example
SELECT CAST('2024-06-15' AS DATE) AS DateValue;

-- PostgreSQL Example
SELECT CAST('2024-06-15' AS DATE) AS DateValue;

-- Oracle Example
SELECT CAST('2024-06-15' AS DATE) AS DateValue FROM dual;

-- SQLite Example
SELECT CAST('2024-06-15' AS DATE) AS DateValue;

-- SQL Server Example
SELECT CAST('2024-06-15' AS DATE) AS DateValue;
```

### Using `CAST` in Complex Queries

You can use the `CAST` function in more complex queries to ensure data types are compatible.

#### Example: Aggregating and Casting

```sql
-- MySQL Example
SELECT
    AVG(CAST(column_name AS DECIMAL(10, 2))) AS AverageValue
FROM
    table_name;

-- PostgreSQL Example
SELECT
    AVG(CAST(column_name AS NUMERIC(10, 2))) AS AverageValue
FROM
    table_name;

-- Oracle Example
SELECT
    AVG(CAST(column_name AS NUMBER(10, 2))) AS AverageValue
FROM
    table_name;

-- SQLite Example
SELECT
    AVG(CAST(column_name AS REAL)) AS AverageValue
FROM
    table_name;

-- SQL Server Example
SELECT
    AVG(CAST(column_name AS DECIMAL(10, 2))) AS AverageValue
FROM
    table_name;
```

### Summary

The `CAST` function is a powerful tool for converting data types in SQL, ensuring compatibility within expressions and queries. It is widely supported across different SQL databases, including MySQL, PostgreSQL, Oracle, SQLite, and SQL Server. These examples demonstrate how to effectively use the `CAST` function in various scenarios. If you have more specific queries or need further examples, feel free to ask! ✔️
