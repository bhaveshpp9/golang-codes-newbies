\\ work with database(DB) — SQL — Data Manipulation Functions — Using Aggregate Functions — SUM() Function

The `SUM()` function in SQL is used to calculate the total sum of a numeric column. This function is essential for performing various statistical and data analysis tasks. Here’s a detailed guide on how to use the `SUM()` function across various SQL databases.

### Basic Syntax

```sql
SELECT SUM(column_name) FROM table_name;
```

- `column_name`: The column containing the numeric values to be summed.

### Examples in Different SQL Databases

#### MySQL

In MySQL, you can use the `SUM()` function to calculate the total of a numeric column:

1. **Calculating the total salary:**
   ```sql
   SELECT SUM(Salary) AS TotalSalary
   FROM Employees;
   ```

2. **Calculating the total salary grouped by department:**
   ```sql
   SELECT Department, SUM(Salary) AS TotalSalary
   FROM Employees
   GROUP BY Department;
   ```

#### SQL Server

In SQL Server, the syntax is the same as in MySQL:

1. **Calculating the total salary:**
   ```sql
   SELECT SUM(Salary) AS TotalSalary
   FROM Employees;
   ```

2. **Calculating the total salary grouped by department:**
   ```sql
   SELECT Department, SUM(Salary) AS TotalSalary
   FROM Employees
   GROUP BY Department;
   ```

#### PostgreSQL

In PostgreSQL, the `SUM()` function works similarly:

1. **Calculating the total salary:**
   ```sql
   SELECT SUM(Salary) AS TotalSalary
   FROM Employees;
   ```

2. **Calculating the total salary grouped by department:**
   ```sql
   SELECT Department, SUM(Salary) AS TotalSalary
   FROM Employees
   GROUP BY Department;
   ```

#### SQLite

In SQLite, you can use the same approach:

1. **Calculating the total salary:**
   ```sql
   SELECT SUM(Salary) AS TotalSalary
   FROM Employees;
   ```

2. **Calculating the total salary grouped by department:**
   ```sql
   SELECT Department, SUM(Salary) AS TotalSalary
   FROM Employees
   GROUP BY Department;
   ```

### Practical Examples and Use Cases

#### Calculating Total Sales

You can use the `SUM()` function to calculate total sales from an `Orders` table.

##### MySQL, SQL Server, PostgreSQL, SQLite

```sql
SELECT SUM(OrderAmount) AS TotalSales
FROM Orders;
```

#### Calculating Total Sales by Customer

You can group the results by customer to see the total sales per customer.

##### MySQL, SQL Server, PostgreSQL, SQLite

```sql
SELECT CustomerID, SUM(OrderAmount) AS TotalSales
FROM Orders
GROUP BY CustomerID;
```

#### Calculating Total Sales by Month

You can group the results by month to see the total sales per month.

##### MySQL, SQL Server, PostgreSQL, SQLite

```sql
SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS OrderMonth, SUM(OrderAmount) AS TotalSales
FROM Orders
GROUP BY DATE_FORMAT(OrderDate, '%Y-%m');
```

For SQL Server and PostgreSQL, you might need to use different date formatting functions.

##### SQL Server

```sql
SELECT FORMAT(OrderDate, 'yyyy-MM') AS OrderMonth, SUM(OrderAmount) AS TotalSales
FROM Orders
GROUP BY FORMAT(OrderDate, 'yyyy-MM');
```

##### PostgreSQL

```sql
SELECT TO_CHAR(OrderDate, 'YYYY-MM') AS OrderMonth, SUM(OrderAmount) AS TotalSales
FROM Orders
GROUP BY TO_CHAR(OrderDate, 'YYYY-MM');
```

##### SQLite

```sql
SELECT strftime('%Y-%m', OrderDate) AS OrderMonth, SUM(OrderAmount) AS TotalSales
FROM Orders
GROUP BY strftime('%Y-%m', OrderDate);
```

#### Combining with Other Aggregate Functions

You can combine `SUM()` with other aggregate functions for comprehensive data analysis.

##### MySQL, SQL Server, PostgreSQL, SQLite

```sql
SELECT Department,
       COUNT(*) AS NumberOfEmployees,
       SUM(Salary) AS TotalSalary,
       AVG(Salary) AS AverageSalary,
       MIN(Salary) AS MinimumSalary,
       MAX(Salary) AS MaximumSalary
FROM Employees
GROUP BY Department;
```

### Handling NULL Values

The `SUM()` function ignores `NULL` values. If you want to treat `NULL` values as zero, you can use the `COALESCE` function.

##### Example Handling NULL Values

##### MySQL, SQL Server, PostgreSQL, SQLite

```sql
SELECT Department,
       SUM(COALESCE(Salary, 0)) AS TotalSalary
FROM Employees
GROUP BY Department;
```

### Using SUM() in Subqueries

You can use `SUM()` in subqueries to find records that meet specific criteria.

##### Example: Finding Customers with Total Purchases Over $1000

##### MySQL, SQL Server, PostgreSQL, SQLite

```sql
SELECT CustomerID, CustomerName
FROM Customers
WHERE CustomerID IN (
    SELECT CustomerID
    FROM Orders
    GROUP BY CustomerID
    HAVING SUM(OrderAmount) > 1000
);
```

### Summary

The `SUM()` function is used to calculate the total of numeric values in a column. It can be used in various scenarios, such as calculating total salaries, sales, or expenses. This function is supported across different SQL databases, and the syntax remains consistent, making it easy to apply these techniques regardless of the SQL dialect.

These examples demonstrate how to effectively use the `SUM()` function for data analysis. If you have more specific queries or need further examples, feel free to ask! ✔️
